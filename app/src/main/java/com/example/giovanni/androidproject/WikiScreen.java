package com.example.giovanni.androidproject;

import android.annotation.SuppressLint;
import android.content.Context;
import android.content.Intent;
import android.graphics.Point;
import android.graphics.Rect;
import android.os.Environment;
import android.support.v7.app.AppCompatActivity;
import android.os.Bundle;
import android.util.Log;
import android.view.DragEvent;
import android.view.MotionEvent;
import android.view.ScaleGestureDetector;
import android.view.View;
import android.widget.TextView;
import android.widget.Toast;

import com.github.barteksc.pdfviewer.PDFView;
import com.github.barteksc.pdfviewer.listener.OnTapListener;

import java.io.FileNotFoundException;
import java.io.FileOutputStream;
import java.io.IOException;
import java.sql.Time;
import java.util.ArrayList;
import java.util.Calendar;
import java.util.Date;
import java.util.UUID;

import static android.view.DragEvent.ACTION_DRAG_ENDED;
import static android.view.DragEvent.ACTION_DRAG_LOCATION;
import static android.view.DragEvent.ACTION_DRAG_STARTED;
import static android.view.KeyEvent.ACTION_DOWN;
import static android.view.KeyEvent.ACTION_UP;
import static android.view.MotionEvent.ACTION_MOVE;

public class WikiScreen extends AppCompatActivity {

    private static final String FILE_NAME = "WikiLog.txt";
    ArrayList<String> logList = new ArrayList<String>();
    public String path = Environment.getExternalStorageDirectory().getAbsolutePath()+"/aaLog";
    final int ID = 3;
    Toast toastMessage;
    PDFView pdfView;
    boolean actionUpFlag = false;
    private float tX,tY,tZ;
    String uniqueID;
    @SuppressLint("ClickableViewAccessibility")
    @Override
    protected void onCreate(Bundle savedInstanceState) {
        super.onCreate(savedInstanceState);
        setContentView(R.layout.activity_wiki_screen);

        pdfView = findViewById(R.id.pdfView);
        pdfView.fromAsset("Hamster_racing.pdf").load();
        final View overlay = findViewById(R.id.overlay);



        overlay.setOnTouchListener(new View.OnTouchListener() {
            String temp;

           @Override
            public boolean onTouch(View v, MotionEvent event) {
               tX = event.getX();
               tY = event.getY();
               tZ = event.getPressure();
               Date curTime = Calendar.getInstance().getTime();
               if(event.getAction() == event.ACTION_DOWN){
                   String logstr = curTime + "ID:"+ ID +","+"Action_down, " +"X:"+ String.valueOf(tX) + ", Y:" + String.valueOf(tY) + ", Pressure:" + String.valueOf(tZ);
                   Log.i("inputLog", logstr);
                   toastThis(logstr);
                   logList.add(logstr);
               }

               if(event.getAction() == event.ACTION_MOVE){
                   String logstr = curTime + "ID:"+ ID +","+"Action_move, " +"X:"+ String.valueOf(tX) + ", Y:" + String.valueOf(tY) + ", Pressure:" + String.valueOf(tZ);
                   Log.i("inputLog", logstr);
                   toastThis(logstr);
                   logList.add(logstr);
               }

               if(event.getAction() == event.ACTION_UP){
                   String logstr = curTime + "ID:"+ ID +","+"Action_up, " +"X:"+ String.valueOf(tX) + ", Y:" + String.valueOf(tY) + ", Pressure:" + String.valueOf(tZ);
                   Log.i("inputLog", logstr);
                   toastThis(logstr);
                   logList.add(logstr);
               }
               MotionEvent eventToPass = event;
               return false;
           }

        });


    }


    @Override
    public boolean dispatchTouchEvent (MotionEvent ev) {
        // Do your calcluations
        return super.dispatchTouchEvent(ev);
    }

    public void writeToLog(String string)
    {
        FileOutputStream fos = null;
        try {
            fos=openFileOutput(FILE_NAME,MODE_APPEND);
            fos.write(string.getBytes());

            toastThis("Log saved to " + getFilesDir() +"/"+ FILE_NAME);
        } catch (FileNotFoundException e) {
            e.printStackTrace();
        } catch (IOException e) {
            e.printStackTrace();
        }finally {
            if(fos==null)
            {
                try {
                    fos.close();
                } catch (IOException e) {
                    e.printStackTrace();
                }
            }

        }
    }

    protected void toastThis(String message){
        if (toastMessage!= null) {
            toastMessage.cancel();
        }
        toastMessage=Toast.makeText(WikiScreen.this, message, Toast.LENGTH_SHORT);
        toastMessage.show();
    }
    @Override
    public void onBackPressed() {
        updateFile();
        super.onBackPressed();
    }

    private void updateFile()
    {
        String temp="";
        for (String object: logList) {
            temp+=object + System.getProperty("line.separator");
        }

        writeToLog(temp);
    }


    public static Point getTouchPositionFromDragEvent(View item, DragEvent event) {
        Rect rItem = new Rect();
        item.getGlobalVisibleRect(rItem);
        return new Point(rItem.left + Math.round(event.getX()), rItem.top + Math.round(event.getY()));
    }


}


